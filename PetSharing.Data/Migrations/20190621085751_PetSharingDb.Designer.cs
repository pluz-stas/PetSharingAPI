// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetSharing.Data.Contexts;

namespace PetSharing.Data.Migrations
{
    [DbContext(typeof(PetSharingDbContext))]
    [Migration("20190621085751_PetSharingDb")]
    partial class PetSharingDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetSharing.Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LikeCount");

                    b.Property<int>("PostId");

                    b.Property<string>("Text");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("ReceiverId");

                    b.Property<int>("SenderId");

                    b.Property<string>("Text");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.PetProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgLikeCount");

                    b.Property<string>("Breed");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<int>("Gender");

                    b.Property<string>("Img");

                    b.Property<bool>("IsReadyForSex");

                    b.Property<bool>("IsSale");

                    b.Property<bool>("IsShare");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("OwnerId");

                    b.Property<string>("Type");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PetProfiles");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Header");

                    b.Property<string>("Img");

                    b.Property<int>("LikeCount");

                    b.Property<int>("PetId");

                    b.Property<int?>("PetProfileId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("PetProfileId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Subscription", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("PetId");

                    b.HasKey("UserId", "PetId");

                    b.HasIndex("PetId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Comment", b =>
                {
                    b.HasOne("PetSharing.Data.Entities.Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetSharing.Data.Entities.User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Message", b =>
                {
                    b.HasOne("PetSharing.Data.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.PetProfile", b =>
                {
                    b.HasOne("PetSharing.Data.Entities.User")
                        .WithMany("PetProfiles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Post", b =>
                {
                    b.HasOne("PetSharing.Data.Entities.PetProfile")
                        .WithMany("Posts")
                        .HasForeignKey("PetProfileId");
                });

            modelBuilder.Entity("PetSharing.Data.Entities.Subscription", b =>
                {
                    b.HasOne("PetSharing.Data.Entities.PetProfile", "PetProfile")
                        .WithMany("Folowers")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetSharing.Data.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
